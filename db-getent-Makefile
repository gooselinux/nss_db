# Makefile to (re-)generate db versions of system database files.
# Copyright (C) 1996, 1997, 1998 Free Software Foundation, Inc.
# This file is part of the GNU C Library.
# Contributed by Ulrich Drepper <drepper@cygnus.com>, 1996.
#
# The GNU C Library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Library General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.

# The GNU C Library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Library General Public License for more details.
#
# You should have received a copy of the GNU Library General Public
# License along with the GNU C Library; see the file COPYING.LIB.  If not,
# write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.  */

FDATABASES = $(wildcard /etc/passwd /etc/group /etc/ethers /etc/protocols \
		       /etc/rpc /etc/services /etc/shadow /etc/netgroup)
DATABASES = $(notdir $(FDATABASES))

VAR_DB = /var/db

AWK = awk
MAKEDB = makedb --quiet
GETENT = getent -s "dns `grep ^$1: /etc/nsswitch.conf | sed -r 's,db([[:blank:]]*\[[^]]*\])?,,g' | awk '{$$1="";print}'`" $1

.PHONY: $(patsubst %,$(VAR_DB)/%.db,$(DATABASES))
all: $(patsubst %,$(VAR_DB)/%.db,$(DATABASES))

$(VAR_DB)/passwd.db:
	@echo -n "$(patsubst %.db,%,$(@F))... "
	@$(call GETENT,passwd) | $(AWK) 'BEGIN { FS=":"; OFS=":"; cnt=0 } \
		 /^[ \t]*$$/ { next } \
		 /^[ \t]*#/ { next } \
		 { printf "0%u ", cnt++; print } \
		 /^[^#]/ { printf ".%s ", $$1; print; \
			   printf "=%s ", $$3; print }' | \
	$(MAKEDB) -o $@ -
	@echo "done."

$(VAR_DB)/group.db:
	@echo -n "$(patsubst %.db,%,$(@F))... "
	@$(call GETENT,group) | $(AWK) 'BEGIN { FS=":"; OFS=":"; cnt=0 } \
		 /^[ \t]*$$/ { next } \
		 /^[ \t]*#/ { next } \
		 { printf "0%u ", cnt++; print } \
		 /^[^#]/ { printf ".%s ", $$1; print; \
			   printf "=%s ", $$3; print }' | \
	$(MAKEDB) -o $@ -
	@echo "done."

$(VAR_DB)/protocols.db:
	@echo -n "$(patsubst %.db,%,$(@F))... "
	@$(call GETENT,protocols) | $(AWK) 'BEGIN { cnt=0 } \
		 /^[ \t]*$$/ { next } \
		 /^[ \t]*#/ { next } \
		 { printf "0%u ", cnt++; print } \
		 /^[^#]/ { printf ".%s ", $$1; print; \
			   printf "=%s ", $$2; print; \
			   for (i = 3; i <= NF && !($$i ~ /^#/); ++i) \
			     { printf ".%s ", $$i; print } }' | \
	$(MAKEDB) -o $@ -
	@echo "done."

$(VAR_DB)/rpc.db:
	@echo -n "$(patsubst %.db,%,$(@F))... "
	@$(call GETENT,rpc) | $(AWK) 'BEGIN { cnt=0 } \
		 /^[ \t]*$$/ { next } \
		 /^[ \t]*#/ { next } \
		 { printf "0%u ", cnt++; print } \
		 /^[^#]/ { printf ".%s ", $$1; print; \
			   printf "=%s ", $$2; print; \
			   for (i = 3; i <= NF && !($$i ~ /^#/); ++i) \
			     { printf ".%s ", $$i; print } }' | \
	$(MAKEDB) -o $@ -
	@echo "done."

$(VAR_DB)/services.db:
	@echo -n "$(patsubst %.db,%,$(@F))... "
	@$(call GETENT,services) | $(AWK) 'BEGIN { FS="[ \t/]+"; cnt=0 } \
		 /^[ \t]*$$/ { next } \
		 /^[ \t]*#/ { next } \
		 { printf "0%u ", cnt++; print } \
		 /^[^#]/ { printf ".%s/%s ", $$1, $$3; print; \
			   printf ".%s/ ", $$1; print; \
			   printf "=%s/%s ", $$2, $$3; print; \
			   printf "=%s/ ", $$2; print; \
			   for (i = 4; i <= NF && !($$i ~ /^#/); ++i) \
			     { printf ".%s/%s ", $$i, $$3; print; \
			       printf ".%s/ ", $$i; print } }' | \
	$(MAKEDB) -o $@ -
	@echo "done."

$(VAR_DB)/shadow.db:
	@echo -n "$(patsubst %.db,%,$(@F))... "
	@$(call GETENT,shadow) | $(AWK) 'BEGIN { FS=":"; OFS=":"; cnt=0 } \
		 /^[ \t]*$$/ { next } \
		 /^[ \t]*#/ { next } \
		 { printf "0%u ", cnt++; print } \
		 /^[^#]/ { printf ".%s ", $$1; print }' | \
	(umask 077 && $(MAKEDB) -o $@ -)
	@echo "done."
	@if chgrp shadow $@ 2>/dev/null; then \
	  chmod g+r $@; \
	else \
	  chown 0 $@; chgrp 0 $@; chmod 600 $@; \
	  echo; \
	  echo "Warning: The shadow password database $@"; \
	  echo "has been set to be readable only by root.  You may want"; \
	  echo "to make it readable by the \`shadow' group depending"; \
	  echo "on your configuration."; \
	  echo; \
	fi
